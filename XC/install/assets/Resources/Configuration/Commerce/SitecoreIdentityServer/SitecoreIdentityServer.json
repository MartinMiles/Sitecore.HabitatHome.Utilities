// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Deploy Sitecore IdentityServer        //
//                                                                            //
//  Run this configuration to deploy Sitecore IdentityServer.                 //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //
{
  "Parameters": {
    "SitecoreIdentityServerPath": {
      "Type": "string",
      "Description": "Sitecore IdentityServer Path"
    },
    "CommerceInstallRoot": {
      "Type": "string",
      "Description": "The root path of commerce services."
    },
    "SitecoreDbServer": {
      "Type": "string",
      "Description": "Sitecore database server name"
    },
    "SitecoreCoreDbName": {
      "Type": "string",
      "Description": "Sitecore Core database name"
    },
    "UserDomain": {
      "Type": "string",
      "Description": "User Domain for Commerce Services App Pool"
    },
    "UserName": {
      "Type": "string",
      "Description": "User Name for Commerce Services App Pool"
    },
    "UserPassword": {
      "Type": "string",
      "Description": "User Password for Commerce Services App Pool"
    },
    "RootCertName": {
      "Type": "string",
      "Description": "The name of the root certificate.",
      "DefaultValue": "SitecoreRootCert"
    },
    "SitecoreIdentityServerName": {
      "Type": "string",
      "Description": "Sitecore Identity Server name"
    },
    "SitecoreIdentityHostname": {
      "Type": "string",
      "Description": "Sitecore Identity Server host header name"
    },
    "SitecoreBizFxPort": {
      "Type": "string",
      "Description": "Sitecore BizFx Server port"
    },
    "BaseConfigurationFolder": {
      "Type": "string",
      "Description": "The base folder for SIF configuration."
    }
  },
  "Variables": {
    "SitecoreIdentityServerPhysicalPath": "[joinpath(parameter('CommerceInstallRoot'), parameter('SitecoreIdentityServerName'))]",
    // The name dns name of the root certificate.
    "Root.Cert.DnsName": "[concat('DO_NOT_TRUST_', parameter('RootCertName'))]",
    // The certificate store for the root certificate.
    "Root.Cert.Store": "cert:\\LocalMachine\\Root",
    "Client.Cert.Store": "cert:\\Localmachine\\My",
    "SitecoreIdentityServerPort": "5050"
  },
  "Register": {
    "ConfigFunction": {
      "ConvertToSecureString": "ConvertTo-SecureString"
    }
  },
  "Modules": [
    "ManageCommerceService",
    "DeployCommerceContent"
  ],
  "Tasks": {
    "CreateIdentityServerClientCert": {
      "Description": "Create a certificate signed by the root authority.",
      "Type": "NewSignedCertificate",
      "Params": {
        "Signer": "[GetCertificate(variable('Root.Cert.DnsName'), variable('Root.Cert.Store'))]",
        "Path": "c:\\certificates",
        "CertStoreLocation": "[variable('Root.Cert.Store')]",
        "FriendlyName": "IdentityServerClientCert",
        "Name": "IdentityServerClientCert",
        "DnsName": [
          "[parameter('SitecoreIdentityServerName')]",
          "[parameter('SitecoreIdentityHostname')]"
        ],
        "IncludePrivateKey": true,
        "Password": "[ConvertToSecureString('sitecore',AsPlainText:true,Force:true)]"
      }
    },
    "SetIdentityServerClientCertPermissions": {
      // Set permissions for the services to access the client certificate.
      "Type": "SetPermissions",
      "Params": {
        "Path": "[ResolveCertificatePath(joinpath(variable('Client.Cert.Store'), GetCertificateThumbprint(parameter('SitecoreIdentityServerName'), variable('Client.Cert.Store'))))]",
        "Rights": [
          {
            "User": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
            "FileSystemRights": [ "Read" ],
            "InheritanceFlags": [ "None" ]
          }
        ]
      }
    },
    "PreconfigureIdentityServerInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Common\\Commerce.InstallSite.json')]",
        "WebsiteHostName": "[parameter('SitecoreIdentityHostname')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "WebsiteName": "[parameter('SitecoreIdentityServerName')]",
        "WebsitePort": "[variable('SitecoreIdentityServerPort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "DeployCommerceContent": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[parameter('SitecoreIdentityServerName']",
        "ServicesContentPath": "[parameter('SitecoreIdentityServerPath')]",
        "PhysicalPath": "[variable('SitecoreIdentityServerPhysicalPath')]",
        "SitecoreDbServer": "[parameter('SitecoreDbServer')]",
        "SitecoreCoreDbName": "[parameter('SitecoreCoreDbName')]",
        "SitecoreBizFxPort": "[parameter('SitecoreBizFxPort')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]"
      }
    },
    "UpdateIdentityServerThumbprint": {
      "Type": "UpdateIdentityServerThumbprint",
      "Params": {
        "Thumbprint": "[GetCertificateThumbprint(parameter('SitecoreIdentityServerName'), variable('Client.Cert.Store'))]",
        "IDServerPath": "[variable('SitecoreIdentityServerPhysicalPath')]"
      }
    },
    "StartAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[parameter('SitecoreIdentityServerName')]",
        "Action": "Start"
      }
    },
    "StartWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[parameter('SitecoreIdentityServerName')]",
        "Action": "Start"
      }
    }
  }
}