{
  "Parameters": {
    "EngineHostName": {
      "Type": "string",
      "Description": "The host name of the engine websites to be used."
    },
    "RootCertFileName": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "SitecoreRootCert"
    },
    "CommerceInstallRoot": {
      "Type": "string",
      "Description": "The root path of commerce services."
    },
    "CommerceServicesDbServer": {
      "Type": "string",
      "Description": "Commerce Engine database server name"
    },
    "CommerceServicesDbName": {
      "Type": "string",
      "Description": "Commerce Services database name"
    },
    "CommerceServicesGlobalDbName": {
      "Type": "string",
      "Description": "Commerce Services Global database name"
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "Description": "The Commerce Engine postfix for services names"
    },
    "SitecoreDbServer": {
      "Type": "string",
      "Description": "Sitecore database server name"
    },
    "SitecoreCoreDbName": {
      "Type": "string",
      "Description": "Sitecore Core database name"
    },
    "CommerceSearchProvider": {
      "Type": "string",
      "Description": "The search provider used for the Commerce Engine - Accepted values are 'SOLR' and 'AZURE'"
    },
    "SolrUrl": {
      "Type": "string",
      "DefaultValue": "https://localhost:8721/solr",
      "Description": "The Solr instance url."
    },
    "SearchIndexPrefix": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The search index prefix."
    },
    "EnvironmentsPrefix": {
      "Type": "string",
      "Description": "The environments name prefix."
    },
    "AzureSearchServiceName": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service name."
    },
    "AzureSearchAdminKey": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service admin key."
    },
    "AzureSearchQueryKey": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service query key."
    },
    "CommerceEngineDacPac": {
      "Type": "string",
      "Description": "Commerce Engine DacPac"
    },
    "SiteHostHeaderName": {
      "Type": "string",
      "Description": "The host header name of the Sitecore site."
    },
    "CommerceOpsServicesPort": {
      "Type": "string",
      "Description": "CommerceOps Services Port"
    },
    "CommerceShopsServicesPort": {
      "Type": "string",
      "Description": "CommerceShops Services Port"
    },
    "CommerceAuthoringServicesPort": {
      "Type": "string",
      "Description": "CommerceAuthoring Services Port"
    },
    "CommerceMinionsServicesPort": {
      "Type": "string",
      "Description": "CommerceMinions Services Port"
    },
    "SitecoreBizFxPort": {
      "Type": "string",
      "Description": "Sitecore BizFx Server port"
    },
    "SitecoreCommerceEnginePath": {
      "Type": "string",
      "Description": "Sitecore Commerce Engine Path"
    },
    "UserDomain": {
      "Type": "string",
      "DefaultValue": "$env:COMPUTERNAME"
    },
    "UserName": {
      "Type": "string",
      "Description": "User Name for Commerce Services App Pool"
    },
    "UserPassword": {
      "Type": "string",
      "Description": "User Password for Commerce Services App Pool"
    },
    "BraintreeAccount": {
      "Type": "psobject",
      "DefaultValue": {
        "MerchantId": "",
        "PublicKey": "",
        "PrivateKey": ""
      },
      "Description": "Braintree account for Payment plugin."
    },
    "BaseConfigurationFolder": {
      "Type": "string",
      "Description": "The base folder for SIF configuration."
    }
  },
  "Variables": {
    "CommerceOps": "[concat('CommerceOps_', parameter('CommerceServicesPostfix'))]",
    "CommerceShops": "[concat('CommerceShops_', parameter('CommerceServicesPostfix'))]",
    "CommerceAuthoring": "[concat('CommerceAuthoring_', parameter('CommerceServicesPostfix'))]",
    "CommerceMinions": "[concat('CommerceMinions_', parameter('CommerceServicesPostfix'))]",
    "CommerceOpsPhysicalPath": "[joinpath(parameter('CommerceInstallRoot'),  variable('CommerceOps'))]",
    "CommerceShopsPhysicalPath": "[joinpath(parameter('CommerceInstallRoot'),  variable('CommerceShops'))]",
    "CommerceAuthoringPhysicalPath": "[joinpath(parameter('CommerceInstallRoot'),  variable('CommerceAuthoring'))]",
    "CommerceMinionsPhysicalPath": "[joinpath(parameter('CommerceInstallRoot'),  variable('CommerceMinions'))]",
    "Root.Cert.DnsName": "[concat('DO_NOT_TRUST_', parameter('RootCertFileName'))]",
    "Root.Cert.Store": "cert:\\LocalMachine\\Root",
    "Client.Cert.Store": "cert:\\LocalMachine\\My",
    "Security.CertificateThumbprint": "[GetCertificateThumbprint(parameter('EngineHostName'), variable('Client.Cert.Store'))]",
    "InstallSiteConfigurationFilePath": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Common\\Commerce.InstallSite.json')]"
  },
  "Modules": [
    "ManageCommerceService",
    "DeployCommerceDatabase",
    "DeployCommerceContent",
    "WindowsLocal",
    "SitecoreUtilityTasks"
  ],
  "Tasks": {
    "CreateSignedEngineCert": {
      "Type": "NewCommerceSignedCertificate",
      "Params": {
        "Signer": "[GetCertificate(variable('Root.Cert.DnsName'), variable('Root.Cert.Store'))]",
        "Path": "c:\\certificates",
        "FriendlyName": "Commerce engine SSL Certificate",
        "CertStoreLocation": "[variable('Client.Cert.Store')]",
        "Name": "[parameter('EngineHostName')]",
        "DnsName": "[parameter('EngineHostName')]"
      }
    },
    "EnsureLocalUser": {
      "Type": "EnsureLocalUser",
      "Params": {
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "DeployCommerceDatabase": {
      "Type": "DeployCommerceDatabase",
      "Params": {
        "CommerceServicesDbServer": "[parameter('CommerceServicesDbServer')]",
        "CommerceServicesDbName": "[parameter('CommerceServicesDbName')]",
        "CommerceServicesGlobalDbName": "[parameter('CommerceServicesGlobalDbName')]",
        "CommerceEngineDacPac": "[parameter('CommerceEngineDacPac')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]"
      }
    },
    "AddCommerceUserToCoreDatabase": {
      "Type": "AddCommerceUserToCoreDatabase",
      "Params": {
        "SitecoreDbServer": "[parameter('SitecoreDbServer')]",
        "SitecoreCoreDbName": "[parameter('SitecoreCoreDbName')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]"
      }
    },
    "PreconfigureCommerceEngineOpsInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[variable('InstallSiteConfigurationFilePath')]",
        "WebsiteHostName": "[parameter('EngineHostName')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "WebsiteName": "[variable('CommerceOps')]",
        "WebsitePort": "[parameter('CommerceOpsServicesPort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "DeployOpsCommerceContent": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[variable('CommerceOps')]",
        "ServicesContentPath": "[parameter('SitecoreCommerceEnginePath')]",
        "PhysicalPath": "[variable('CommerceOpsPhysicalPath')]",
        "CommerceServicesDbServer": "[parameter('CommerceServicesDbServer')]",
        "CommerceServicesDbName": "[parameter('CommerceServicesDbName')]",
        "CommerceServicesGlobalDbName": "[parameter('CommerceServicesGlobalDbName')]",
        "SiteHostHeaderName": "[parameter('SiteHostHeaderName')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "SitecoreBizFxPort": "[parameter('SitecoreBizFxPort')]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]",
        "SolrUrl": "[parameter('SolrUrl')]",
        "SearchIndexPrefix": "[parameter('SearchIndexPrefix')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
        "BraintreeAccount": "[parameter('BraintreeAccount')]",
        "AzureSearchServiceName": "[parameter('AzureSearchServiceName')]",
        "AzureSearchAdminKey": "[parameter('AzureSearchAdminKey')]",
        "AzureSearchQueryKey": "[parameter('AzureSearchQueryKey')]"
      }
    },
    "StartOpsAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('CommerceOps')]",
        "Action": "Start"
      }
    },
    "StartOpsWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceOps')]",
        "Action": "Start"
      }
    },
    "PreconfigureCommerceEngineShopsInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[variable('InstallSiteConfigurationFilePath')]",
        "WebsiteHostName": "[parameter('EngineHostName')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "WebsiteName": "[variable('CommerceShops')]",
        "WebsitePort": "[parameter('CommerceShopsServicesPort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "DeployCommerceContentShops": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[variable('CommerceShops')]",
        "ServicesContentPath": "[parameter('SitecoreCommerceEnginePath')]",
        "PhysicalPath": "[variable('CommerceShopsPhysicalPath')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]"
      }
    },
    "StartShopsAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('CommerceShops')]",
        "Action": "Start"
      }
    },
    "StartShopsWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceShops')]",
        "Action": "Start"
      }
    },
    "PreconfigureCommerceEngineAuthoringInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[variable('InstallSiteConfigurationFilePath')]",
        "WebsiteHostName": "[parameter('EngineHostName')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "WebsiteName": "[variable('CommerceAuthoring')]",
        "WebsitePort": "[parameter('CommerceAuthoringServicesPort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "DeployCommerceContentAuthoring": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[variable('CommerceAuthoring')]",
        "ServicesContentPath": "[parameter('SitecoreCommerceEnginePath')]",
        "PhysicalPath": "[variable('CommerceAuthoringPhysicalPath')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]"
      }
    },
    "StartAuthoringAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('CommerceAuthoring')]",
        "Action": "Start"
      }
    },
    "StartAuthoringWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceAuthoring')]",
        "Action": "Start"
      }
    },
    "PreconfigureCommerceEngineMinionsInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[variable('InstallSiteConfigurationFilePath')]",
        "WebsiteHostName": "[parameter('EngineHostName')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "WebsiteName": "[variable('CommerceMinions')]",
        "WebsitePort": "[parameter('CommerceMinionsServicesPort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]",
        "MinionInstance": "true"
      }
    },
    "DeployCommerceContentMinions": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[variable('CommerceMinions')]",
        "ServicesContentPath": "[parameter('SitecoreCommerceEnginePath')]",
        "PhysicalPath": "[variable('CommerceMinionsPhysicalPath')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]"
      }
    },
    "StartMinionsAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('CommerceAuthoring')]",
        "Action": "Start"
      }
    },
    "StartMinionsWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceAuthoring')]",
        "Action": "Start"
      }
    },
    "CreatePerformanceCounters": {
      "Type": "CreatePerformanceCounters"
    }
  }
}